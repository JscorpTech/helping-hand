networks:
  dokploy-network:
    external: true

volumes:
  pg_data: null
  rabbitmq: null
  pycache: null

services:
  helping-nginx:
    networks:
      - dokploy-network
    volumes:
      - ./resources/layout/nginx.conf:/etc/nginx/nginx.conf
      - ../files/media:/usr/share/nginx/html/resources/media/
      - ../files/static:/usr/share/nginx/html/resources/static/
      - ../files/staticfiles:/usr/share/nginx/html/resources/staticfiles/
      - ../files/assets:/usr/share/nginx/html/resources/assets/
    build:
      context: .
      dockerfile: ./docker/Dockerfile.nginx
    depends_on:
      - helping-web
  helping-web:
    networks:
      - dokploy-network
    build:
      context: .
      dockerfile: ./docker/Dockerfile.web
    restart: always
    command: ${COMMAND:-sh ./entrypoint.sh}
    environment:
      - PYTHONPYCACHEPREFIX=/var/cache/pycache
    volumes:
      - './:/code'
      - ../files/media:/code/resources/media
      - ../files/static:/code/resources/static
      - ../files/staticfiles:/code/resources/staticfiles
      - ../files/assets:/code/resources/assets
      - ../files/locale:/code/resources/locale
      - pycache:/var/cache/pycache
    depends_on:
      - helping-db
      - helping-redis
  helping-db:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.postgres
    networks:
      - dokploy-network
    restart: always
    environment:
      POSTGRES_DB: django
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: '2309'
    volumes:
      - pg_data:/var/lib/postgresql/data
  helping-redis:
    networks:
      - dokploy-network
    restart: always
    image: redis
